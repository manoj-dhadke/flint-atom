##########################################################################
#
#  INFIVERVE TECHNOLOGIES PTE LIMITED CONFIDENTIAL
#  __________________
# 
#  (C) INFIVERVE TECHNOLOGIES PTE LIMITED, SINGAPORE
#  All Rights Reserved.
#  Product / Project: Flint IT Automation Platform
#  NOTICE:  All information contained herein is, and remains
#  the property of INFIVERVE TECHNOLOGIES PTE LIMITED.
#  The intellectual and technical concepts contained
#  herein are proprietary to INFIVERVE TECHNOLOGIES PTE LIMITED.
#  Dissemination of this information or any form of reproduction of this material
#  is strictly forbidden unless prior written permission is obtained
#  from INFIVERVE TECHNOLOGIES PTE LIMITED, SINGAPORE.

'.source.ruby':
  'flint-smtp-connector-template':
    'prefix': 'call-smtp-connector'
    'body': """

@log.trace("Calling SMTP Connector...")


${1:connector_name}_response= @call.connector("${1:connector_name}")
                              .set("cc",${2:@cc})                            #Usernames of email accounts who need to be kept informed of the email message content
                              .set("bcc",${3:@bcc})                          #Usernames of email accounts you don't wish the other recipients to see that you sent it to this contact.
                              .set("subject",${4:@subject})                  #Specify subject of an email message here
                              .set("from",${5:@from})                        #Username of sender email accounts
                              .set("to",${6:@to})                            #Usernames is the full email address of the sender's email account
                              .set("body",${7:@body})                        #Email message content mainly a text
                              .set("action","send")                     #Specify action as “send” for sending an email message
                              .set("attachments",${8:@attachments})          #Files to be attached to an email message
                              .set("username",${8:@username})
                              .set("password",${8:@password})
                              .sync

#SMTP Connector Response Meta Parameters
${9:response_exitcode}=${1:connector_name}_response.exitcode                     #Exit status code
${10:response_message}=${1:connector_name}_response.message                      #Execution status message


#SMTP Connector Response Parameters
${11:result} =${1:connector_name}_response.get("result")                       #Response Body

if  ${9:response_exitcode} == 0

    @log.info('Success in executing SMTP Connector where, exitcode ::'+response_exitcode.to_s+'| message :: '+response_message)
    @log.info('SMTP Response Body :: '+response_message)

    @output.set("result",response_message)
else

    @log.error('Failure in executing SMTP Connector where, exitcode ::'+response_exitcode.to_s+'|message :: '+response_message)
    @log.error("Failed")

    @output.set("result",response_message)
end

"""
